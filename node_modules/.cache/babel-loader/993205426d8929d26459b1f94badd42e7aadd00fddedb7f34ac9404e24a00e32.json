{"ast":null,"code":"var _jsxFileName = \"/home/str/Desktop/code/web/react/js/joke-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [blague, setBlague] = useState('');\n  const [error, setError] = useState('');\n  const [userChoice, setUserChoice] = useState('Any'); // Par défaut sur 'Programming'\n\n  const handleClick = value => {\n    setUserChoice(value);\n  };\n  const fetchBlague = async () => {\n    try {\n      const response = await fetch(`https://v2.jokeapi.dev/joke/${userChoice}?type=single&amount=1`);\n      const data = await response.json();\n      if (data.type === 'single') {\n        setBlague(data.joke);\n      } else {\n        setBlague('Aucune blague trouvée');\n      }\n    } catch (error) {\n      setError('Erreur lors de la récupération de la blague');\n    }\n  };\n  useEffect(() => {\n    fetchBlague();\n  }, [userChoice]); // Re-fetch la blague à chaque changement de `userChoice`\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Joke App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"What kind of joke would you like to hear?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleClick('Programming'),\n        children: \"Programming\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleClick('Dark'),\n        children: \"Dark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleClick('Any'),\n        children: \"Anything\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"you chosed: \", userChoice]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"response\",\n      children: [error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: blague\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchBlague,\n        children: \"Again !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DTTXw9AzRv4pbvT9T0JhNAr7xPQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","blague","setBlague","error","setError","userChoice","setUserChoice","handleClick","value","fetchBlague","response","fetch","data","json","type","joke","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["/home/str/Desktop/code/web/react/js/joke-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [blague, setBlague] = useState('');\n  const [error, setError] = useState('');\n  const [userChoice, setUserChoice] = useState('Any'); // Par défaut sur 'Programming'\n\n  const handleClick = (value) => {\n    setUserChoice(value);\n  };\n\n  const fetchBlague = async () => {\n    try {\n      const response = await fetch(`https://v2.jokeapi.dev/joke/${userChoice}?type=single&amount=1`);\n      const data = await response.json();\n\n      if (data.type === 'single') {\n        setBlague(data.joke);\n      } else {\n        setBlague('Aucune blague trouvée');\n      }\n    } catch (error) {\n      setError('Erreur lors de la récupération de la blague');\n    }\n  };\n\n  useEffect(() => {\n    fetchBlague();\n  }, [userChoice]); // Re-fetch la blague à chaque changement de `userChoice`\n\n  return (\n    <div>\n      <h1>Joke App</h1>\n      <div className='question'>\n        <h2>What kind of joke would you like to hear?</h2>\n        \n          <button onClick={() => handleClick('Programming')}>Programming</button>\n          <button onClick={() => handleClick('Dark')}>Dark</button>\n          <button onClick={() => handleClick('Any')}>Anything</button>\n          <p>you chosed: {userChoice}</p>\n      </div>\n      <div className='response'>\n        {error ? <p>{error}</p> : <p>{blague}</p>}\n        <button onClick={fetchBlague}>\n          Again !\n        </button>\n      </div>\n      \n    </div>\n  );\n  \n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}