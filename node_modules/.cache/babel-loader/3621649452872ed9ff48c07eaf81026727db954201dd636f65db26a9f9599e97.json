{"ast":null,"code":"var _jsxFileName = \"/home/str/Desktop/code/web/react/js/joke-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [blague, setBlague] = useState('');\n  const [error, setError] = useState('');\n  const fetchBlague = async () => {\n    try {\n      const response = await fetch('https://v2.jokeapi.dev/joke/Programming?type=single&amount=1'); // Requête à l'API\n      const data = await response.json();\n      if (data.type === 'single') {\n        setBlague(data.joke); // Mettre à jour l'état avec la nouvelle blague\n      } else {\n        setBlague('Aucune blague trouvée');\n      }\n    } catch (error) {\n      setError('Erreur lors de la récupération de la blague');\n    }\n  };\n  useEffect(() => {\n    fetchBlague();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '50px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Joke App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: blague\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchBlague,\n      children: \"Change la Blague\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"llWnDvTkkrVu4Qasinxd/bPFGQE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","blague","setBlague","error","setError","fetchBlague","response","fetch","data","json","type","joke","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/str/Desktop/code/web/react/js/joke-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [blague, setBlague] = useState('');  \n  const [error, setError] = useState('');    \n\n  const fetchBlague = async () => {\n    try {\n      const response = await fetch('https://v2.jokeapi.dev/joke/Programming?type=single&amount=1'); // Requête à l'API\n      const data = await response.json();\n\n      if (data.type === 'single') {\n        setBlague(data.joke); // Mettre à jour l'état avec la nouvelle blague\n      } else {\n        setBlague('Aucune blague trouvée');\n      }\n    } catch (error) {\n      setError('Erreur lors de la récupération de la blague');\n    }\n  };\n\n  useEffect(() => {\n    fetchBlague(); \n  }, []);\n  return (\n    <div style={{ textAlign: 'center', marginTop: '50px' }}>\n      <h1>Joke App</h1>\n      {error ? <p>{error}</p> : <p>{blague}</p>}\n      <button onClick={fetchBlague}>\n        Change la Blague\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8DAA8D,CAAC,CAAC,CAAC;MAC9F,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,IAAI,KAAK,QAAQ,EAAE;QAC1BR,SAAS,CAACM,IAAI,CAACG,IAAI,CAAC,CAAC,CAAC;MACxB,CAAC,MAAM;QACLT,SAAS,CAAC,uBAAuB,CAAC;MACpC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,QAAQ,CAAC,6CAA6C,CAAC;IACzD;EACF,CAAC;EAEDR,SAAS,CAAC,MAAM;IACdS,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EACN,oBACEP,OAAA;IAAKc,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACrDjB,OAAA;MAAAiB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChBhB,KAAK,gBAAGL,OAAA;MAAAiB,QAAA,EAAIZ;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAAGrB,OAAA;MAAAiB,QAAA,EAAId;IAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzCrB,OAAA;MAAQsB,OAAO,EAAEf,WAAY;MAAAU,QAAA,EAAC;IAE9B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACnB,EAAA,CA/BQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}